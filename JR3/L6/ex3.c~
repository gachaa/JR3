#include<stdio.h>
#include<stdlib.h>

typedef int elementtype;
typedef struct node* list;

struct node {
  elementtype element;
  struct node *next;
};

void insert(list l, elementtype e) {
  struct node *n = (struct node*)malloc(sizeof(struct node));
  n->element = e;
  n->next = l->next;
  l->next = n;
  return;
}

void printAll(list l1, list l2) {
  int up = 0;
  list ans = (struct node*)malloc(sizeof(struct node));
  l1 = l1->next;
  l2 = l2->next;
  
  while(l1 != NULL || l2 != NULL) {
    printf("whileスタート\n");
    if(l1 != NULL && l2 != NULL){
      insert(ans, (l1->element + l2->element+ up)%10);
      up = (l1->element + l2->element + up)/10;
      l1 = l1->next;
      l2 = l2->next;
    } else if (l1 == NULL) {
      insert(ans, (l2->element + up) % 10);
      up = (l2->element + up)/10;
      l2 = l2->next;
    } else {
      insert(ans, (l1->element + up) % 10);
      up = (l1->element + up)/10;
      l1 = l1->next;
    }
  }
  printf("whileend\n");
  if(up != 0) printf("%d", up);

  list cur = ans->next;
  while(cur != NULL) {
    printf("%d", cur->element);
    cur = cur->next;
  }
  printf("\n");
}

int main() {
  int d;
  char c;
  list l1, l2;
  l1 = (struct node*)malloc(sizeof(struct node));
  l2 = (struct node*)malloc(sizeof(struct node));

  while((c=getchar()) != '\n') {
    d = (int)c - '0';
    insert(l1, d);
  }
 
  while((c=getchar()) != '\n') {
    d = (int)c - '0';
    insert(l2, d);
  }

  printAll(l1, l2);
  return 0;
}
