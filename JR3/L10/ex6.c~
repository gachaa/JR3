#include<stdio.h>
#include<stdlib.h>
#include<string.h>
#define SIZE 101

struct student { char name[32]; int score; };

struct node {struct student data; struct node *next;};

int hash(char *s) {
  int i = 0, ans;
  while(s[i] != '\0'){
    if(i==0) ans = s[0]%SIZE;
    else ans = (ans*128 + s[i]) % SIZE;
    i++;
  }
  return ans;
}

void set_data(struct node *table[], struct student st) {
  struct node *n = (struct node*) malloc(sizeof(struct node));
  int i = hash(st.name);
  struct node *p = table[i];

  printf("%d \n", i);

  if(table[i] == NULL) {
    n->data = st;
    n->next = table[i];
    table[i] = n;
    return;
  }


  while(1) {
      if(strcmp(table[i]->data.name, st.name) == 0){
      table[i]->data.score += st.score;
      table[i] = p;
      return;
    }
    if(table[i]->next == NULL) break;
    table[i] = table[i]->next;
  }

  n->data = st;
  n->next = NULL;
  table[i]->next = n;
  table[i] = p;
}

int main() {
  int i;
  char buf[128];
  struct student st;
  struct node *table[SIZE], *p;
  
  for(i=0; i<SIZE; i++) table[i] = NULL;
  while(fgets(buf, sizeof(buf), stdin) != NULL) {
    //sscanf(buf, "%d,", &v);
    sscanf(buf, "%[^,],%d", st.name, &st.score);
    set_data(table, st);
  }

  for(i=0;i<SIZE;++i) {
    p = table[i];
    while(p!=NULL) {
      st = p->data;
      printf("%s,%d\n", st.name, st.score);
      p = p->next;
    }
  }
  return 0;
}
